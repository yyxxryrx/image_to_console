name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: image_to_console-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: image_to_console-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: image_to_console-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: image_to_console-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: image_to_console-windows-x86_64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/image_to_console.exe" "dist/${{ matrix.name }}"
          else
            cp "target/${{ matrix.target }}/release/image_to_console" "dist/${{ matrix.name }}"
          fi
          cd dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "../${{ matrix.name }}.zip" "${{ matrix.name }}"
          else
            tar -czf "../${{ matrix.name }}.tar.gz" "${{ matrix.name }}"
          fi

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.name }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_name: ${{ matrix.name }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_content_type: application/octet-stream